name: Job Rerun Test

on:
  workflow_dispatch:
    inputs:
      npm_tag:
        description: 'The npm tag for create razzle app'
        default: 'development'
      jest_filter:
        description: 'The filter for jest tests'
        default: 'simple'
      package_manager:
        description: 'The package manager to use, yalc with yarn default'
        default: 'yalc'


jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        node-version: [10.x]
        os: [ubuntu-latest, macOS-latest]
        webpack: ["webpack@4.46.0 html-webpack-plugin@4.5.2" ]

    name: Test on node ${{ matrix.node-version }} and ${{ matrix.os }} with ${{ matrix.webpack }}

    steps:

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"

    - name: Log date
      run: echo "${{ steps.date.outputs.date }}"


    
    - name: Restore last run status
      id: last_run
      uses: actions/cache@v2
      with:
        path: ~/.status
        key: ${{ github.run_id }}-${{ matrix.os }}-${{ matrix.node-version }}-${{ matrix.webpack }}-${{ steps.date.outputs.date }}
        restore-keys: |
          ${{ github.run_id }}-${{ matrix.os }}-${{ matrix.node-version }}-${{ matrix.webpack }}-
      
    - name: Set default run status
      run:  echo "::set-output name=last_run_status::$(<~/.status )"

    - name: Log status
      run: echo "${{ steps.date.outputs.last_run_status }}"


    - name: Checkout ref
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.workflow_dispatch.ref }}
    
    - name: Log Cache Params
      id: log_cahce_params
      if: steps.cache.outputs.cache-hit != 'true' && steps.last_run_status.outputs.last_run_status != 'success'
      run:  echo "Cache Hit:${{ steps.cache.outputs.cache-hit }} Status:${{ steps.last_run_status.outputs.last_run_status }} "

    - name: Test Task
      id: test_success_task
      if: steps.cache.outputs.cache-hit != 'true' && steps.last_run_status.outputs.last_run_status != 'success'
      run:  param=$((1 + $RANDOM % 10)) && echo "Param:${param}" && if [ $((param%2)) -eq 0 ]; then exit 1; else echo "success"; fi

   

    - name: Save run status
      if: steps.last_run_status.outputs.last_run_status != 'success'
      run: echo "::set-output name=last_run_status::${{ steps.test_run.outcome }}" > ~/.status
