# This is a basic workflow to help you get started with Actions

name: BaseCI

env:
  REPO_NAME: sample
  PKG_REPOTYPE: community
  TRAVIS: true
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  PACKAGECLOUD_API_TOKEN: ${{ secrets.PACKAGECLOUD_API_TOKEN }}
  

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the gindibay-test-release branch
  push:
    branches: [ gindibay-test-release ]
  pull_request:
    branches: [ gindibay-test-release ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include: 
          - distro: "el/8"
            TARGET_PLATFORM: el/8

    # Steps represent a sequence of tasks that will be executed as part of the job
    env: 
      TARGET_PLATFORM: ${{ matrix.TARGET_PLATFORM }}
    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install python dependencies
        run: echo "PC API TOKEN:${PACKAGECLOUD_API_TOKEN}" && sudo apt install software-properties-common && sudo add-apt-repository ppa:deadsnakes/ppa && sudo apt install python3.9 && python3.9 --version && sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1

      # Runs a set of commands using the runners shell
      - name: Checkout Tools and Install 
        run: |
          python --version &&  git clone --single-branch --branch pg_auto_failover_build https://github.com/citusdata/tools.git && sudo make -C tools install 
      - name: Checkout Tools and Install
        run: build_new_release
      - name: Upload new packages
        run: ls ./pkgs/releases && ls && python ./tools/travis/upload_to_package_cloud.py ${TARGET_PLATFORM} ${PACKAGECLOUD_API_TOKEN}  ${REPO_NAME}
